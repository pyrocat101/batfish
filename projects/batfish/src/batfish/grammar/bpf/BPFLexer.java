// Generated from /home/linjie/batfish/projects/batfish/src/batfish/grammar/bpf/BPFLexer.g4 by ANTLR 4.4

package batfish.grammar.bpf;

import org.antlr.v4.runtime.Lexer;
import org.antlr.v4.runtime.CharStream;
import org.antlr.v4.runtime.Token;
import org.antlr.v4.runtime.TokenStream;
import org.antlr.v4.runtime.*;
import org.antlr.v4.runtime.atn.*;
import org.antlr.v4.runtime.dfa.DFA;
import org.antlr.v4.runtime.misc.*;

@SuppressWarnings({"all", "warnings", "unchecked", "unused", "cast"})
public class BPFLexer extends batfish.grammar.BatfishLexer {
	static { RuntimeMetaData.checkVersion("4.4", RuntimeMetaData.VERSION); }

	protected static final DFA[] _decisionToDFA;
	protected static final PredictionContextCache _sharedContextCache =
		new PredictionContextCache();
	public static final int
		WS=1, LPAREN=2, RPAREN=3, IP=4, TCP=5, UDP=6, SCTP=7, ICMP=8, IGMP=9, 
		HOST=10, NET=11, MASK=12, PORT=13, PORTRANGE=14, DST=15, SRC=16, AND=17, 
		OR=18, NOT=19, CIDR=20, HID=21, NID3=22, NID2=23, NID1=24, RANGE=25, NUM=26, 
		ID=27;
	public static String[] modeNames = {
		"DEFAULT_MODE"
	};

	public static final String[] tokenNames = {
		"'\\u0000'", "'\\u0001'", "'\\u0002'", "'\\u0003'", "'\\u0004'", "'\\u0005'", 
		"'\\u0006'", "'\\u0007'", "'\b'", "'\t'", "'\n'", "'\\u000B'", "'\f'", 
		"'\r'", "'\\u000E'", "'\\u000F'", "'\\u0010'", "'\\u0011'", "'\\u0012'", 
		"'\\u0013'", "'\\u0014'", "'\\u0015'", "'\\u0016'", "'\\u0017'", "'\\u0018'", 
		"'\\u0019'", "'\\u001A'", "'\\u001B'"
	};
	public static final String[] ruleNames = {
		"WS", "LPAREN", "RPAREN", "IP", "TCP", "UDP", "SCTP", "ICMP", "IGMP", 
		"HOST", "NET", "MASK", "PORT", "PORTRANGE", "DST", "SRC", "AND", "OR", 
		"NOT", "CIDR", "HID", "NID3", "NID2", "NID1", "RANGE", "NUM", "ID", "F_PositiveDigit", 
		"F_Digit", "F_HexDigit", "F_IPv4Part", "F_IPv4Address", "F_IPv4Prefix", 
		"F_Letter", "F_AlphaNum"
	};


	public BPFLexer(CharStream input) {
		super(input);
		_interp = new LexerATNSimulator(this,_ATN,_decisionToDFA,_sharedContextCache);
	}

	@Override
	public String getGrammarFileName() { return "BPFLexer.g4"; }

	@Override
	public String[] getTokenNames() { return tokenNames; }

	@Override
	public String[] getRuleNames() { return ruleNames; }

	@Override
	public String getSerializedATN() { return _serializedATN; }

	@Override
	public String[] getModeNames() { return modeNames; }

	@Override
	public ATN getATN() { return _ATN; }

	public static final String _serializedATN =
		"\3\u0430\ud6d1\u8206\uad2d\u4417\uaef1\u8d80\uaadd\2\35\u0117\b\1\4\2"+
		"\t\2\4\3\t\3\4\4\t\4\4\5\t\5\4\6\t\6\4\7\t\7\4\b\t\b\4\t\t\t\4\n\t\n\4"+
		"\13\t\13\4\f\t\f\4\r\t\r\4\16\t\16\4\17\t\17\4\20\t\20\4\21\t\21\4\22"+
		"\t\22\4\23\t\23\4\24\t\24\4\25\t\25\4\26\t\26\4\27\t\27\4\30\t\30\4\31"+
		"\t\31\4\32\t\32\4\33\t\33\4\34\t\34\4\35\t\35\4\36\t\36\4\37\t\37\4 \t"+
		" \4!\t!\4\"\t\"\4#\t#\4$\t$\3\2\6\2K\n\2\r\2\16\2L\3\2\3\2\3\3\3\3\3\4"+
		"\3\4\3\5\3\5\3\5\3\6\3\6\3\6\3\6\3\7\3\7\3\7\3\7\3\b\3\b\3\b\3\b\3\b\3"+
		"\t\3\t\3\t\3\t\3\t\3\n\3\n\3\n\3\n\3\n\3\13\3\13\3\13\3\13\3\13\3\f\3"+
		"\f\3\f\3\f\3\r\3\r\3\r\3\r\3\r\3\16\3\16\3\16\3\16\3\16\3\17\3\17\3\17"+
		"\3\17\3\17\3\17\3\17\3\17\3\17\3\17\3\20\3\20\3\20\3\20\3\21\3\21\3\21"+
		"\3\21\3\22\3\22\3\22\3\22\3\22\5\22\u0099\n\22\3\23\3\23\3\23\3\23\5\23"+
		"\u009f\n\23\3\24\3\24\3\24\3\24\5\24\u00a5\n\24\3\25\3\25\3\25\3\25\3"+
		"\26\3\26\3\27\3\27\3\27\3\27\3\27\3\27\3\30\3\30\3\30\3\30\3\31\3\31\3"+
		"\32\6\32\u00ba\n\32\r\32\16\32\u00bb\3\32\3\32\6\32\u00c0\n\32\r\32\16"+
		"\32\u00c1\3\32\3\32\3\32\6\32\u00c7\n\32\r\32\16\32\u00c8\3\32\3\32\3"+
		"\32\3\32\6\32\u00cf\n\32\r\32\16\32\u00d0\5\32\u00d3\n\32\3\33\6\33\u00d6"+
		"\n\33\r\33\16\33\u00d7\3\33\3\33\3\33\6\33\u00dd\n\33\r\33\16\33\u00de"+
		"\5\33\u00e1\n\33\3\34\3\34\3\34\7\34\u00e6\n\34\f\34\16\34\u00e9\13\34"+
		"\3\35\3\35\3\36\3\36\3\37\3\37\5\37\u00f1\n\37\3 \3 \3 \3 \3 \3 \3 \3"+
		" \3 \3 \3 \3 \3 \3 \5 \u0101\n \3!\3!\3!\3!\3!\3!\3!\3!\3\"\3\"\3\"\3"+
		"\"\3\"\5\"\u0110\n\"\3#\3#\3$\3$\5$\u0116\n$\2\2%\3\3\5\4\7\5\t\6\13\7"+
		"\r\b\17\t\21\n\23\13\25\f\27\r\31\16\33\17\35\20\37\21!\22#\23%\24\'\25"+
		")\26+\27-\30/\31\61\32\63\33\65\34\67\359\2;\2=\2?\2A\2C\2E\2G\2\3\2\7"+
		"\5\2\13\f\17\17\"\"\4\2ZZzz\4\2/\60aa\4\2CHch\4\2C\\c|\u0124\2\3\3\2\2"+
		"\2\2\5\3\2\2\2\2\7\3\2\2\2\2\t\3\2\2\2\2\13\3\2\2\2\2\r\3\2\2\2\2\17\3"+
		"\2\2\2\2\21\3\2\2\2\2\23\3\2\2\2\2\25\3\2\2\2\2\27\3\2\2\2\2\31\3\2\2"+
		"\2\2\33\3\2\2\2\2\35\3\2\2\2\2\37\3\2\2\2\2!\3\2\2\2\2#\3\2\2\2\2%\3\2"+
		"\2\2\2\'\3\2\2\2\2)\3\2\2\2\2+\3\2\2\2\2-\3\2\2\2\2/\3\2\2\2\2\61\3\2"+
		"\2\2\2\63\3\2\2\2\2\65\3\2\2\2\2\67\3\2\2\2\3J\3\2\2\2\5P\3\2\2\2\7R\3"+
		"\2\2\2\tT\3\2\2\2\13W\3\2\2\2\r[\3\2\2\2\17_\3\2\2\2\21d\3\2\2\2\23i\3"+
		"\2\2\2\25n\3\2\2\2\27s\3\2\2\2\31w\3\2\2\2\33|\3\2\2\2\35\u0081\3\2\2"+
		"\2\37\u008b\3\2\2\2!\u008f\3\2\2\2#\u0098\3\2\2\2%\u009e\3\2\2\2\'\u00a4"+
		"\3\2\2\2)\u00a6\3\2\2\2+\u00aa\3\2\2\2-\u00ac\3\2\2\2/\u00b2\3\2\2\2\61"+
		"\u00b6\3\2\2\2\63\u00d2\3\2\2\2\65\u00e0\3\2\2\2\67\u00e2\3\2\2\29\u00ea"+
		"\3\2\2\2;\u00ec\3\2\2\2=\u00f0\3\2\2\2?\u0100\3\2\2\2A\u0102\3\2\2\2C"+
		"\u010f\3\2\2\2E\u0111\3\2\2\2G\u0115\3\2\2\2IK\t\2\2\2JI\3\2\2\2KL\3\2"+
		"\2\2LJ\3\2\2\2LM\3\2\2\2MN\3\2\2\2NO\b\2\2\2O\4\3\2\2\2PQ\7*\2\2Q\6\3"+
		"\2\2\2RS\7+\2\2S\b\3\2\2\2TU\7k\2\2UV\7r\2\2V\n\3\2\2\2WX\7v\2\2XY\7e"+
		"\2\2YZ\7r\2\2Z\f\3\2\2\2[\\\7w\2\2\\]\7f\2\2]^\7r\2\2^\16\3\2\2\2_`\7"+
		"u\2\2`a\7e\2\2ab\7v\2\2bc\7r\2\2c\20\3\2\2\2de\7k\2\2ef\7e\2\2fg\7o\2"+
		"\2gh\7r\2\2h\22\3\2\2\2ij\7k\2\2jk\7i\2\2kl\7o\2\2lm\7r\2\2m\24\3\2\2"+
		"\2no\7j\2\2op\7q\2\2pq\7u\2\2qr\7v\2\2r\26\3\2\2\2st\7p\2\2tu\7g\2\2u"+
		"v\7v\2\2v\30\3\2\2\2wx\7o\2\2xy\7c\2\2yz\7u\2\2z{\7m\2\2{\32\3\2\2\2|"+
		"}\7r\2\2}~\7q\2\2~\177\7t\2\2\177\u0080\7v\2\2\u0080\34\3\2\2\2\u0081"+
		"\u0082\7r\2\2\u0082\u0083\7q\2\2\u0083\u0084\7t\2\2\u0084\u0085\7v\2\2"+
		"\u0085\u0086\7t\2\2\u0086\u0087\7c\2\2\u0087\u0088\7p\2\2\u0088\u0089"+
		"\7i\2\2\u0089\u008a\7g\2\2\u008a\36\3\2\2\2\u008b\u008c\7f\2\2\u008c\u008d"+
		"\7u\2\2\u008d\u008e\7v\2\2\u008e \3\2\2\2\u008f\u0090\7u\2\2\u0090\u0091"+
		"\7t\2\2\u0091\u0092\7e\2\2\u0092\"\3\2\2\2\u0093\u0094\7c\2\2\u0094\u0095"+
		"\7p\2\2\u0095\u0099\7f\2\2\u0096\u0097\7(\2\2\u0097\u0099\7(\2\2\u0098"+
		"\u0093\3\2\2\2\u0098\u0096\3\2\2\2\u0099$\3\2\2\2\u009a\u009b\7q\2\2\u009b"+
		"\u009f\7t\2\2\u009c\u009d\7~\2\2\u009d\u009f\7~\2\2\u009e\u009a\3\2\2"+
		"\2\u009e\u009c\3\2\2\2\u009f&\3\2\2\2\u00a0\u00a1\7p\2\2\u00a1\u00a2\7"+
		"q\2\2\u00a2\u00a5\7v\2\2\u00a3\u00a5\7#\2\2\u00a4\u00a0\3\2\2\2\u00a4"+
		"\u00a3\3\2\2\2\u00a5(\3\2\2\2\u00a6\u00a7\5A!\2\u00a7\u00a8\7\61\2\2\u00a8"+
		"\u00a9\5C\"\2\u00a9*\3\2\2\2\u00aa\u00ab\5A!\2\u00ab,\3\2\2\2\u00ac\u00ad"+
		"\5? \2\u00ad\u00ae\7\60\2\2\u00ae\u00af\5? \2\u00af\u00b0\7\60\2\2\u00b0"+
		"\u00b1\5? \2\u00b1.\3\2\2\2\u00b2\u00b3\5? \2\u00b3\u00b4\7\60\2\2\u00b4"+
		"\u00b5\5? \2\u00b5\60\3\2\2\2\u00b6\u00b7\5? \2\u00b7\62\3\2\2\2\u00b8"+
		"\u00ba\5;\36\2\u00b9\u00b8\3\2\2\2\u00ba\u00bb\3\2\2\2\u00bb\u00b9\3\2"+
		"\2\2\u00bb\u00bc\3\2\2\2\u00bc\u00bd\3\2\2\2\u00bd\u00bf\7/\2\2\u00be"+
		"\u00c0\5;\36\2\u00bf\u00be\3\2\2\2\u00c0\u00c1\3\2\2\2\u00c1\u00bf\3\2"+
		"\2\2\u00c1\u00c2\3\2\2\2\u00c2\u00d3\3\2\2\2\u00c3\u00c4\7\62\2\2\u00c4"+
		"\u00c6\t\3\2\2\u00c5\u00c7\5=\37\2\u00c6\u00c5\3\2\2\2\u00c7\u00c8\3\2"+
		"\2\2\u00c8\u00c6\3\2\2\2\u00c8\u00c9\3\2\2\2\u00c9\u00ca\3\2\2\2\u00ca"+
		"\u00cb\7/\2\2\u00cb\u00cc\7\62\2\2\u00cc\u00ce\t\3\2\2\u00cd\u00cf\5="+
		"\37\2\u00ce\u00cd\3\2\2\2\u00cf\u00d0\3\2\2\2\u00d0\u00ce\3\2\2\2\u00d0"+
		"\u00d1\3\2\2\2\u00d1\u00d3\3\2\2\2\u00d2\u00b9\3\2\2\2\u00d2\u00c3\3\2"+
		"\2\2\u00d3\64\3\2\2\2\u00d4\u00d6\5;\36\2\u00d5\u00d4\3\2\2\2\u00d6\u00d7"+
		"\3\2\2\2\u00d7\u00d5\3\2\2\2\u00d7\u00d8\3\2\2\2\u00d8\u00e1\3\2\2\2\u00d9"+
		"\u00da\7\62\2\2\u00da\u00dc\t\3\2\2\u00db\u00dd\5=\37\2\u00dc\u00db\3"+
		"\2\2\2\u00dd\u00de\3\2\2\2\u00de\u00dc\3\2\2\2\u00de\u00df\3\2\2\2\u00df"+
		"\u00e1\3\2\2\2\u00e0\u00d5\3\2\2\2\u00e0\u00d9\3\2\2\2\u00e1\66\3\2\2"+
		"\2\u00e2\u00e7\5E#\2\u00e3\u00e6\5G$\2\u00e4\u00e6\t\4\2\2\u00e5\u00e3"+
		"\3\2\2\2\u00e5\u00e4\3\2\2\2\u00e6\u00e9\3\2\2\2\u00e7\u00e5\3\2\2\2\u00e7"+
		"\u00e8\3\2\2\2\u00e88\3\2\2\2\u00e9\u00e7\3\2\2\2\u00ea\u00eb\4\63;\2"+
		"\u00eb:\3\2\2\2\u00ec\u00ed\4\62;\2\u00ed<\3\2\2\2\u00ee\u00f1\5;\36\2"+
		"\u00ef\u00f1\t\5\2\2\u00f0\u00ee\3\2\2\2\u00f0\u00ef\3\2\2\2\u00f1>\3"+
		"\2\2\2\u00f2\u0101\5;\36\2\u00f3\u00f4\59\35\2\u00f4\u00f5\5;\36\2\u00f5"+
		"\u0101\3\2\2\2\u00f6\u00f7\7\63\2\2\u00f7\u00f8\5;\36\2\u00f8\u00f9\5"+
		";\36\2\u00f9\u0101\3\2\2\2\u00fa\u00fb\7\64\2\2\u00fb\u00fc\4\62\66\2"+
		"\u00fc\u0101\5;\36\2\u00fd\u00fe\7\64\2\2\u00fe\u00ff\7\67\2\2\u00ff\u0101"+
		"\4\62\67\2\u0100\u00f2\3\2\2\2\u0100\u00f3\3\2\2\2\u0100\u00f6\3\2\2\2"+
		"\u0100\u00fa\3\2\2\2\u0100\u00fd\3\2\2\2\u0101@\3\2\2\2\u0102\u0103\5"+
		"? \2\u0103\u0104\7\60\2\2\u0104\u0105\5? \2\u0105\u0106\7\60\2\2\u0106"+
		"\u0107\5? \2\u0107\u0108\7\60\2\2\u0108\u0109\5? \2\u0109B\3\2\2\2\u010a"+
		"\u0110\5;\36\2\u010b\u010c\4\63\64\2\u010c\u0110\5;\36\2\u010d\u010e\7"+
		"\65\2\2\u010e\u0110\4\62\64\2\u010f\u010a\3\2\2\2\u010f\u010b\3\2\2\2"+
		"\u010f\u010d\3\2\2\2\u0110D\3\2\2\2\u0111\u0112\t\6\2\2\u0112F\3\2\2\2"+
		"\u0113\u0116\5E#\2\u0114\u0116\5;\36\2\u0115\u0113\3\2\2\2\u0115\u0114"+
		"\3\2\2\2\u0116H\3\2\2\2\25\2L\u0098\u009e\u00a4\u00bb\u00c1\u00c8\u00d0"+
		"\u00d2\u00d7\u00de\u00e0\u00e5\u00e7\u00f0\u0100\u010f\u0115\3\b\2\2";
	public static final ATN _ATN =
		new ATNDeserializer().deserialize(_serializedATN.toCharArray());
	static {
		_decisionToDFA = new DFA[_ATN.getNumberOfDecisions()];
		for (int i = 0; i < _ATN.getNumberOfDecisions(); i++) {
			_decisionToDFA[i] = new DFA(_ATN.getDecisionState(i), i);
		}
	}
}