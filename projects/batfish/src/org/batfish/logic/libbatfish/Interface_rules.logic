block(`Interface_rules) {
   alias_all(`libbatfish:Interface),
   alias_all(`libbatfish:Ip),
   alias_all(`libbatfish:Node),
   clauses(`{
// BEGIN CODE

GuessFlowSinkInterface() <-
   !SetFlowSinkInterface(_, _).

FlowSinkInterface(node, interface) <-
   SetFlowSinkInterface(node, interface).

HasIp(node, ip) <-
   IpReadyInt(node, _, ip, _).

HasNetwork(node, network) <-
   IpReadyInt(node, _, ip, prefix_length),
   NetworkOf[ip, prefix_length] = network.

Interface_DYNAMIC[] = interface <-
   Interface_name(interface:"dynamic").

Interface_FLOW_SINK_TERMINATION[] = interface <-
   Interface_name(interface:"flow_sink_termination").

Interface_NULL[] = interface <-
   Interface_name(interface:"null_interface").

IpCount[ip] = cnt <-
   agg<<cnt = count()>>
      HasIp(_, ip).

Network(network),
   Network_address[network] = network_start,
   Network_constructor[network_start, network_end, prefix_length] = network,
   Network_index(network, network_start, network_end, prefix_length),
   Network_end[network] = network_end,
   Network_prefix_length[network] = prefix_length
<-
   IpReadyInt(_, _, ip, _),
   Ip_address(ip:network_start),
   network_end = network_start,
   prefix_length = 32.

IpReadyInt(node, interface, ip, prefix_length) <-
   SetIpInt(node, interface, ip, prefix_length),
   SetActiveInt(node, interface).

// END CODE
   })
} <-- .

