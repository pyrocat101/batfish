block(`RouteFilter) {
   alias_all(`libbatfish:Ip),
   export(`{
// BEGIN CODE

need_RouteFilterMatchNetwork(list, network) ->
   RouteFilter(list),
   Network(network).

/// [RouteFilter(x)] =
///   [x] is a prefix list.
RouteFilter(x),
   RouteFilter_name(x:n)
   ->
   string(n).

RouteFilterDenyNetwork(list, network) ->
   RouteFilter(list),
   Network(network).

RouteFilterFirstMatch[list, network] = matchLine ->
   RouteFilter(list),
   Network(network),
   int(matchLine).

RouteFilterMatch(list, network, line) ->
   RouteFilter(list),
   Network(network),
   int(line).

RouteFilterPermitNetwork(list, network) ->
   RouteFilter(list),
   Network(network).

SetRouteFilterLine(list, line, network_start, network_end, min_prefix, max_prefix) ->
   RouteFilter(list),
   int(line),
   int(network_start),
   int(network_end),
   int(min_prefix),
   int(max_prefix).

SetRouteFilterPermitLine(list, line) ->
   RouteFilter(list),
   int(line).

// END CODE
   })
} <-- .

