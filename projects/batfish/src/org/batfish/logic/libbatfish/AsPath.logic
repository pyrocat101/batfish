block(`AsPath) {
   alias_all(`libbatfish:BgpAdvertisement),
   export(`{
// BEGIN CODE

need_AsPathMatchAdvert(asPath, advert) ->
   AsPath(asPath),
   BgpAdvertisement(advert).

AdvertisementPath(advert, index, as) ->
   BgpAdvertisement(advert),
   int(index),
   AutonomousSystem(as).

AdvertisementPathSize[advert] = size ->
   BgpAdvertisement(advert),
   int(size).

AsPath(asPath),
   AsPath_name(asPath:name)
->
   string(name).

AsPathDenyAdvert(asPath, advert) ->
   AsPath(asPath),
   BgpAdvertisement(advert).

AsPathFirstMatchAdvert[asPath, advert] = matchLine ->
   AsPath(asPath),
   BgpAdvertisement(advert),
   int(matchLine).

AsPathLineMatchAdvert(asPath, line, advert) ->
   AsPath(asPath),
   int(line),
   BgpAdvertisement(advert).

AsPathLineMatchAs(asPath, line, advert) ->
   AsPath(asPath),
   int(line),
   BgpAdvertisement(advert).

AsPathLineMatchAsAtBeginning(asPath, line, advert) ->
   AsPath(asPath),
   int(line),
   BgpAdvertisement(advert).

AsPathLineMatchAsPair(asPath, line, advert) ->
   AsPath(asPath),
   int(line),
   BgpAdvertisement(advert).

AsPathLineMatchAsPairAtBeginning(asPath, line, advert) ->
   AsPath(asPath),
   int(line),
   BgpAdvertisement(advert).

AsPathLineMatchEmpty(asPath, line, advert) ->
   AsPath(asPath),
   int(line),
   BgpAdvertisement(advert).

AsPathPermitAdvert(asPath, advert) ->
   AsPath(asPath),
   BgpAdvertisement(advert).

/// [AutonomousSystem(x)] =
///   [x] is an autonomous system.
AutonomousSystem(x),
   AutonomousSystem_number(x:n)
   ->
   int(n).

SetAsPathLineDeny(asPath, line) ->
   AsPath(asPath),
   int(line).

SetAsPathLineMatchAs(asPath, line, asLow, asHigh) ->
   AsPath(asPath),
   int(line),
   AutonomousSystem(asLow),
   AutonomousSystem(asHigh).

SetAsPathLineMatchAsAtBeginning(asPath, line, asLow, asHigh) ->
   AsPath(asPath),
   int(line),
   AutonomousSystem(asLow),
   AutonomousSystem(asHigh).

SetAsPathLineMatchAsPair(asPath, line, as1Low, as1High, as2Low, as2High) ->
   AsPath(asPath),
   int(line),
   AutonomousSystem(as1Low),
   AutonomousSystem(as1High),
   AutonomousSystem(as2Low),
   AutonomousSystem(as2High).

SetAsPathLineMatchAsPairAtBeginning(asPath, line, as1Low, as1High, as2Low, as2High) ->
   AsPath(asPath),
   int(line),
   AutonomousSystem(as1Low),
   AutonomousSystem(as1High),
   AutonomousSystem(as2Low),
   AutonomousSystem(as2High).

SetAsPathLineMatchEmpty(asPath, line) ->
   AsPath(asPath),
   int(line).

SetAsPathLinePermit(asPath, line) ->
   AsPath(asPath),
   int(line).

// END CODE
   })
} <-- .
